// <auto-generated />
using System;
using CCS.Repository.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CCS.Repository.Infrastructure.Migrations
{
    [DbContext(typeof(StationContext))]
    [Migration("20190212094658_IsOnAddedToMeasure")]
    partial class IsOnAddedToMeasure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497");

            modelBuilder.Entity("CCS.Repository.Entities.Measure", b =>
                {
                    b.Property<int>("MeasureId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Humidity");

                    b.Property<bool>("IsOn");

                    b.Property<int>("Location");

                    b.Property<decimal>("Temperature");

                    b.Property<DateTime>("Time");

                    b.HasKey("MeasureId");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("CCS.Repository.Entities.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("InnerTemperatureMax");

                    b.Property<int>("InnerTemperatureMin");

                    b.Property<bool>("IsOn");

                    b.Property<int>("Mode");

                    b.Property<int>("OuterTemperatureMax");

                    b.Property<int>("OuterTemperatureMin");

                    b.Property<DateTime>("ScheduleStar");

                    b.Property<DateTime>("ScheduleStop");

                    b.HasKey("SettingId");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            SettingId = 1,
                            InnerTemperatureMax = 0,
                            InnerTemperatureMin = 3,
                            IsOn = false,
                            Mode = 1,
                            OuterTemperatureMax = 0,
                            OuterTemperatureMin = 0,
                            ScheduleStar = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScheduleStop = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
